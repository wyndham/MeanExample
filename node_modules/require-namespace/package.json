{
  "name": "require-namespace",
  "version": "0.3.43",
  "description": "Namespace support for node.js, making it easy to require a module without specifying the path to its file, and easy to register a double when testing.",
  "main": "index",
  "author": {
    "name": "Colin Jack"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/colin-jack/require-namespace.git"
  },
  "homepage": "https://github.com/colin-jack/require-namespace",
  "dependencies": {
    "winston": "*",
    "underscore": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "sinon": "*"
  },
  "keywords": [
    "util",
    "inject",
    "require",
    "namespace",
    "dependency"
  ],
  "scripts": {
    "test": "mocha -R spec spec/**/*_spec.js --recursive"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "readme": "## require-namespace\r\nWhen you require modules in node.js you include the path to the file, this can result in messy \"../../\" paths at the top of your files but can also mean that moving/renaming files break dependent modules. \r\n\r\nTo avoid that issue the new notion of a namespace allows you to require a dependency in a way that is more loosely coupled to the directory structure on disk.\r\n\r\n## Installation\r\n    $ npm install require-namespace\r\n\r\n### Usage\r\nDuring initialisation of the system you create a namespace and associate it with a directory:\r\n```js\r\nvar namespace = require('require-namespace');\r\nnamespace.createSync(__dirname + '/model/', 'domain');\r\n```\r\nThe first argument is the path to a directory containing JS modules that you want to include in the namespace, the second argument is the name of the namespace. Giving the namepace a name is optional but useful (see below).\r\n\r\nAt this point the directory is recursively scanned and a record of each file is kept. Once this is done we can access the modules from the namespace:\r\n```js\r\nvar namespace = require('require-namespace');\r\nvar domain = namespace.domain;\r\nvar linkProcessor = domain.LinkContentProcessor;\r\n```\r\nThat require will work if there was a file called 'LinkContentProcessor.js' anywhere within the directory we used when creating the namespace. \r\n\r\nNote also that the createSync method returns the created namespace and that if you prefer you can use domain.require(\"LinkContentProcessor\") rather than domain.LinkContentProcessor.\r\n\r\n## Example\r\nThe project comes with an example that you can run using\r\n\r\n    node examples/simple.js\r\n\r\n## Tests\r\nThe tests use [mocha](hhttp://mochajs.org/) and can be run using:\r\n\r\n    mocha -R spec spec/**/*_spec.js --recursive",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/colin-jack/require-namespace/issues"
  },
  "_id": "require-namespace@0.3.43",
  "_shasum": "763e444badcf668c90f420a5bd25b82cf6b60473",
  "_from": "require-namespace@",
  "_resolved": "https://registry.npmjs.org/require-namespace/-/require-namespace-0.3.43.tgz"
}
